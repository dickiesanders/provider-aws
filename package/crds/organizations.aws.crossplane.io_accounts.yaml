apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: accounts.organizations.aws.crossplane.io
spec:
  group: organizations.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Account
    listKind: AccountList
    plural: accounts
    singular: account
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Account is the Schema for the Accounts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AccountSpec defines the desired state of Account
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: AccountParameters defines the desired state of Account
                properties:
                  accountName:
                    description: The friendly name of the member account.
                    type: string
                  email:
                    description: The email address of the owner to assign to the new member account. This email address must not already be associated with another AWS account. You must use a valid email address to complete account creation. You can't access the root user of the account or remove an account that was created with an invalid email address.
                    type: string
                  iamUserAccessToBilling:
                    description: "If set to ALLOW, the new account enables IAM users to access account billing information if they have the required permissions. If set to DENY, only the root user of the new account can access account billing information. For more information, see Activating Access to the Billing and Cost Management Console (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate) in the AWS Billing and Cost Management User Guide. \n If you don't specify this parameter, the value defaults to ALLOW, and IAM users and roles with the required permissions can access billing information for the new account."
                    type: string
                  region:
                    description: Region is which region the Account will be created.
                    type: string
                  roleName:
                    description: "(Optional) \n The name of an IAM role that AWS Organizations automatically preconfigures in the new member account. This role trusts the management account, allowing users in the management account to assume the role, as permitted by the management account administrator. The role has administrator permissions in the new member account. \n If you don't specify this parameter, the role name defaults to OrganizationAccountAccessRole. \n For more information about how to use this role to access the member account, see the following links: \n    * Accessing and Administering the Member Accounts in Your Organization    (https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role)    in the AWS Organizations User Guide \n    * Steps 2 and 3 in Tutorial: Delegate Access Across AWS Accounts Using    IAM Roles (https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)    in the IAM User Guide \n The regex pattern (http://wikipedia.org/wiki/regex) that is used to validate this parameter. The pattern can include uppercase letters, lowercase letters, digits with no spaces, and any of the following characters: =,.@-"
                    type: string
                  tags:
                    description: "A list of tags that you want to attach to the newly created account. For each tag in the list, you must specify both a tag key and a value. You can set the value to an empty string, but you can't set it to null. For more information about tagging, see Tagging AWS Organizations resources (https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html) in the AWS Organizations User Guide. \n If any one of the tags is invalid or if you exceed the allowed number of tags for an account, then the entire request fails and the account is not created."
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                required:
                - accountName
                - email
                - region
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AccountStatus defines the observed state of Account.
            properties:
              atProvider:
                description: AccountObservation defines the observed state of Account
                properties:
                  accountID:
                    description: "If the account was created successfully, the unique identifier (ID) of the new account. \n The regex pattern (http://wikipedia.org/wiki/regex) for an account ID string requires exactly 12 digits."
                    type: string
                  completedTimestamp:
                    description: The date and time that the account was created and the request completed.
                    format: date-time
                    type: string
                  failureReason:
                    description: "If the request failed, a description of the reason for the failure. \n    * ACCOUNT_LIMIT_EXCEEDED: The account could not be created because you    have reached the limit on the number of accounts in your organization. \n    * CONCURRENT_ACCOUNT_MODIFICATION: You already submitted a request with    the same information. \n    * EMAIL_ALREADY_EXISTS: The account could not be created because another    AWS account with that email address already exists. \n    * GOVCLOUD_ACCOUNT_ALREADY_EXISTS: The account in the AWS GovCloud (US)    Region could not be created because this Region already includes an account    with that email address. \n    * INVALID_ADDRESS: The account could not be created because the address    you provided is not valid. \n    * INVALID_EMAIL: The account could not be created because the email address    you provided is not valid. \n    * INTERNAL_FAILURE: The account could not be created because of an internal    failure. Try again later. If the problem persists, contact Customer Support. \n    * MISSING_BUSINESS_VALIDATION: The AWS account that owns your organization    has not received Business Validation. \n    * MISSING_PAYMENT_INSTRUMENT: You must configure the management account    with a valid payment method, such as a credit card."
                    type: string
                  govCloudAccountID:
                    description: If the account was created successfully, the unique identifier (ID) of the new account in the AWS GovCloud (US) Region.
                    type: string
                  id:
                    description: "The unique identifier (ID) that references this request. You get this value from the response of the initial CreateAccount request to create the account. \n The regex pattern (http://wikipedia.org/wiki/regex) for a create account request ID string requires \"car-\" followed by from 8 to 32 lowercase letters or digits."
                    type: string
                  requestedTimestamp:
                    description: The date and time that the request was made for the account creation.
                    format: date-time
                    type: string
                  state:
                    description: The status of the request.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - atProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
