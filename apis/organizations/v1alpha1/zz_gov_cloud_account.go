/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// GovCloudAccountParameters defines the desired state of GovCloudAccount
type GovCloudAccountParameters struct {
	// Region is which region the GovCloudAccount will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// The friendly name of the member account.
	// +kubebuilder:validation:Required
	AccountName *string `json:"accountName"`
	// The email address of the owner to assign to the new member account in the
	// commercial Region. This email address must not already be associated with
	// another AWS account. You must use a valid email address to complete account
	// creation. You can't access the root user of the account or remove an account
	// that was created with an invalid email address. Like all request parameters
	// for CreateGovCloudAccount, the request for the email address for the AWS
	// GovCloud (US) account originates from the commercial Region, not from the
	// AWS GovCloud (US) Region.
	// +kubebuilder:validation:Required
	Email *string `json:"email"`
	// If set to ALLOW, the new linked account in the commercial Region enables
	// IAM users to access account billing information if they have the required
	// permissions. If set to DENY, only the root user of the new account can access
	// account billing information. For more information, see Activating Access
	// to the Billing and Cost Management Console (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate)
	// in the AWS Billing and Cost Management User Guide.
	//
	// If you don't specify this parameter, the value defaults to ALLOW, and IAM
	// users and roles with the required permissions can access billing information
	// for the new account.
	IAMUserAccessToBilling *string `json:"iamUserAccessToBilling,omitempty"`
	// (Optional)
	//
	// The name of an IAM role that AWS Organizations automatically preconfigures
	// in the new member accounts in both the AWS GovCloud (US) Region and in the
	// commercial Region. This role trusts the management account, allowing users
	// in the management account to assume the role, as permitted by the management
	// account administrator. The role has administrator permissions in the new
	// member account.
	//
	// If you don't specify this parameter, the role name defaults to OrganizationAccountAccessRole.
	//
	// For more information about how to use this role to access the member account,
	// see Accessing and Administering the Member Accounts in Your Organization
	// (https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role)
	// in the AWS Organizations User Guide and steps 2 and 3 in Tutorial: Delegate
	// Access Across AWS Accounts Using IAM Roles (https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)
	// in the IAM User Guide.
	//
	// The regex pattern (http://wikipedia.org/wiki/regex) that is used to validate
	// this parameter. The pattern can include uppercase letters, lowercase letters,
	// digits with no spaces, and any of the following characters: =,.@-
	RoleName *string `json:"roleName,omitempty"`
	// A list of tags that you want to attach to the newly created account. These
	// tags are attached to the commercial account associated with the GovCloud
	// account, and not to the GovCloud account itself. To add tags to the actual
	// GovCloud account, call the TagResource operation in the GovCloud region after
	// the new GovCloud account exists.
	//
	// For each tag in the list, you must specify both a tag key and a value. You
	// can set the value to an empty string, but you can't set it to null. For more
	// information about tagging, see Tagging AWS Organizations resources (https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html)
	// in the AWS Organizations User Guide.
	//
	// If any one of the tags is invalid or if you exceed the allowed number of
	// tags for an account, then the entire request fails and the account is not
	// created.
	Tags                            []*Tag `json:"tags,omitempty"`
	CustomGovCloudAccountParameters `json:",inline"`
}

// GovCloudAccountSpec defines the desired state of GovCloudAccount
type GovCloudAccountSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       GovCloudAccountParameters `json:"forProvider"`
}

// GovCloudAccountObservation defines the observed state of GovCloudAccount
type GovCloudAccountObservation struct {
	// If the account was created successfully, the unique identifier (ID) of the
	// new account.
	//
	// The regex pattern (http://wikipedia.org/wiki/regex) for an account ID string
	// requires exactly 12 digits.
	AccountID *string `json:"accountID,omitempty"`
	// The date and time that the account was created and the request completed.
	CompletedTimestamp *metav1.Time `json:"completedTimestamp,omitempty"`
	// If the request failed, a description of the reason for the failure.
	//
	//    * ACCOUNT_LIMIT_EXCEEDED: The account could not be created because you
	//    have reached the limit on the number of accounts in your organization.
	//
	//    * CONCURRENT_ACCOUNT_MODIFICATION: You already submitted a request with
	//    the same information.
	//
	//    * EMAIL_ALREADY_EXISTS: The account could not be created because another
	//    AWS account with that email address already exists.
	//
	//    * GOVCLOUD_ACCOUNT_ALREADY_EXISTS: The account in the AWS GovCloud (US)
	//    Region could not be created because this Region already includes an account
	//    with that email address.
	//
	//    * INVALID_ADDRESS: The account could not be created because the address
	//    you provided is not valid.
	//
	//    * INVALID_EMAIL: The account could not be created because the email address
	//    you provided is not valid.
	//
	//    * INTERNAL_FAILURE: The account could not be created because of an internal
	//    failure. Try again later. If the problem persists, contact Customer Support.
	//
	//    * MISSING_BUSINESS_VALIDATION: The AWS account that owns your organization
	//    has not received Business Validation.
	//
	//    * MISSING_PAYMENT_INSTRUMENT: You must configure the management account
	//    with a valid payment method, such as a credit card.
	FailureReason *string `json:"failureReason,omitempty"`
	// If the account was created successfully, the unique identifier (ID) of the
	// new account in the AWS GovCloud (US) Region.
	GovCloudAccountID *string `json:"govCloudAccountID,omitempty"`
	// The unique identifier (ID) that references this request. You get this value
	// from the response of the initial CreateAccount request to create the account.
	//
	// The regex pattern (http://wikipedia.org/wiki/regex) for a create account
	// request ID string requires "car-" followed by from 8 to 32 lowercase letters
	// or digits.
	ID *string `json:"id,omitempty"`
	// The date and time that the request was made for the account creation.
	RequestedTimestamp *metav1.Time `json:"requestedTimestamp,omitempty"`
	// The status of the request.
	State *string `json:"state,omitempty"`
}

// GovCloudAccountStatus defines the observed state of GovCloudAccount.
type GovCloudAccountStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          GovCloudAccountObservation `json:"atProvider"`
}

// +kubebuilder:object:root=true

// GovCloudAccount is the Schema for the GovCloudAccounts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type GovCloudAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GovCloudAccountSpec   `json:"spec,omitempty"`
	Status            GovCloudAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GovCloudAccountList contains a list of GovCloudAccounts
type GovCloudAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GovCloudAccount `json:"items"`
}

// Repository type metadata.
var (
	GovCloudAccountKind             = "GovCloudAccount"
	GovCloudAccountGroupKind        = schema.GroupKind{Group: Group, Kind: GovCloudAccountKind}.String()
	GovCloudAccountKindAPIVersion   = GovCloudAccountKind + "." + GroupVersion.String()
	GovCloudAccountGroupVersionKind = GroupVersion.WithKind(GovCloudAccountKind)
)

func init() {
	SchemeBuilder.Register(&GovCloudAccount{}, &GovCloudAccountList{})
}
